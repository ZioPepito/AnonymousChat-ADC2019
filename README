# Anonymous Chat on P2P Networks

This project is developed and supported for the University of Salerno master class of Distributed Systems. It aims to show an example of the P2P framework/library [TomP2P](https://tomp2p.net/).

##Description

A basic anonymous chat where every member (peer) can create and/or join a chatroom and send messages in it.

 
## Project Structure

Usign Maven you can add the dependencies to TomP2P in the pom.xml file. 

```
<repositories>
    <repository>
        <id>tomp2p.net</id>
         <url>http://tomp2p.net/dev/mvn/</url>
     </repository>
</repositories>
<dependencies>
   <dependency>
     <groupId>net.tomp2p</groupId>
     <artifactId>tomp2p-all</artifactId>
      <version>5.0-Beta8</version>
   </dependency>
</dependencies>
```

The package ```src/main/java/it/isislab/p2p/chat/``` provides three Java classes: 

- _MessageListener_ a interface for listener of messages received by a peer.
- _PublishSubscribe_ a interface that defines the Publish/Subscribe communication paradigm.	
- _PublishSubscribeImpl_ an implementation of the _PublishSubscribe_ interface that exploits the TomP2P library.
- _Example_ an example REPL application of a peers network able to communicate using the publish/subscribe.

## Build app in a Docker container

An example application is provided using Docker container, running on a local machine. See the Dockerfile, for the builing details.

First of all you can build your docker container:

```docker build --no-cache -t anonymouschat  .```

#### Start the master peer

After that you can start the master peer, in interactive mode (-i) and with two (-e) environment variables:

```docker run -i --name MASTER-PEER -e MASTERIP="127.0.0.1" -e ID=0 anonymouschat```

,the MASTERIP envirnoment variable is the master peer ip address and the ID environment variable is the unique id of your peer. Rember you have to run the master peer using the ID=0.

#### Start a generic peer

When master is started you have to check the ip address of your container:

- Check the docker <container ID>: ```docker ps```
- Check the IP address: ```docker inspect <container ID>```

Now you can start your peers varying the unique peer id:

```docker run -i --name PEER-1 -e MASTERIP="172.17.0.2" -e ID=1 anonymouschat```

##Developed by :
Gianmarco Russo
0522500542
